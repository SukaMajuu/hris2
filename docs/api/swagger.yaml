openapi: 3.0.0
info:
    title: HRIS API
    description: API documentation for Human Resource Information System
    version: 1.0.0
    contact:
        name: SukaMaju
servers:
    - url: http://localhost:8080/v1
      description: Development server

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        User:
            type: object
            description: Represents a user account in the system.
            properties:
                id:
                    type: integer
                    format: uint
                    description: Unique identifier for the user.
                    readOnly: true
                    example: 1
                email:
                    type: string
                    format: email
                    maxLength: 255
                    description: User's unique email address. Required for login.
                    example: "john.doe@example.com"
                phone:
                    type: string
                    maxLength: 20
                    nullable: true
                    description: User's unique phone number (optional).
                    example: "+6281234567890"
                role:
                    type: string
                    description: Role assigned to the user, determining their permissions.
                    enum: [admin, user]
                    example: "user"
                last_login_at:
                    type: string
                    format: date-time
                    nullable: true
                    description: Timestamp of the user's last login (optional).
                    readOnly: true
                    example: "2024-07-15T10:00:00Z"
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the user account was created.
                    readOnly: true
                updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the user account was last updated.
                    readOnly: true
            required:
                - id
                - email
                - role
                - created_at
                - updated_at

        Employee:
            type: object
            properties:
                id:
                    type: integer
                    format: uint
                    description: Unique identifier for the employee.
                    readOnly: true
                user_id:
                    type: integer
                    format: uint
                    description: Foreign key referencing the associated User ID.
                first_name:
                    type: string
                    maxLength: 255
                    description: Employee's first name.
                last_name:
                    type: string
                    maxLength: 255
                    description: Employee's last name.
                position_id:
                    type: integer
                    format: uint
                    description: Foreign key referencing the Position ID.
                employment_status:
                    type: boolean
                    description: Indicates if the employee is currently active. True for active, False for inactive.
                    default: true
                employee_code:
                    type: string
                    maxLength: 255
                    nullable: true
                    description: Unique code assigned to the employee (optional).
                branch_id:
                    type: integer
                    format: uint
                    nullable: true
                    description: Foreign key referencing the Branch ID (optional).
                gender:
                    type: string
                    nullable: true
                    description: Employee's gender (optional).
                    enum: [male, female, other]
                phone:
                    type: string
                    maxLength: 255
                    nullable: true
                    description: Employee's phone number (optional).
                nik:
                    type: string
                    maxLength: 255
                    nullable: true
                    description: Employee's National Identity Number (KTP number in Indonesia) (optional).
                place_of_birth:
                    type: string
                    maxLength: 255
                    nullable: true
                    description: Place where the employee was born (optional).
                last_education:
                    type: string
                    nullable: true
                    description: Employee's highest level of education completed (optional).
                    enum: [high_school, diploma, bachelor, master, doctorate]
                grade:
                    type: string
                    maxLength: 50
                    nullable: true
                    description: Employee's job grade or level (optional).
                contract_type:
                    type: string
                    nullable: true
                    description: Type of employment contract (optional).
                    enum: [permanent, contract, internship, freelance]
                resignation_date:
                    type: string
                    format: date
                    nullable: true
                    description: Date the employee resigned (optional).
                hire_date:
                    type: string
                    format: date
                    nullable: true
                    description: Date the employee was hired (optional).
                bank_name:
                    type: string
                    maxLength: 100
                    nullable: true
                    description: Name of the employee's bank (optional).
                bank_account_number:
                    type: string
                    maxLength: 100
                    nullable: true
                    description: Employee's bank account number (optional).
                bank_account_holder_name:
                    type: string
                    maxLength: 255
                    nullable: true
                    description: Name on the employee's bank account (optional).
                tax_status:
                    type: string
                    nullable: true
                    description: Employee's tax status (e.g., PTKP status in Indonesia) (optional).
                    enum:
                        [tk0, tk1, tk2, tk3, k0, k1, k2, k3, ki0, ki1, ki2, ki3]
                profile_photo_url:
                    type: string
                    maxLength: 255
                    format: url
                    nullable: true
                    description: URL to the employee's profile photo (optional).
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the record was created.
                    readOnly: true
                updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the record was last updated.
                    readOnly: true
            required:
                - id
                - user_id
                - first_name
                - last_name
                - position_id
                - employment_status
                - created_at
                - updated_at

        Position:
            type: object
            description: Represents a job position within the organization.
            properties:
                id:
                    type: integer
                    format: uint
                    description: Unique identifier for the position.
                    readOnly: true
                name:
                    type: string
                    maxLength: 255
                    description: The name of the position.
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the position was created.
                    readOnly: true
                updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the position was last updated.
                    readOnly: true
            required:
                - id
                - name
                - created_at
                - updated_at

        PaginationParams:
            type: object
            description: Parameters for pagination in API requests
            properties:
                page:
                    type: integer
                    minimum: 1
                    default: 1
                    description: The page number to retrieve (1-indexed)
                    example: 1
                page_size:
                    type: integer
                    minimum: 1
                    maximum: 100
                    default: 10
                    description: Number of items per page
                    example: 10
            required:
                - page
                - page_size

        Branch:
            type: object
            description: Represents a company branch or location.
            properties:
                id:
                    type: integer
                    format: uint
                    description: Unique identifier for the branch.
                    readOnly: true
                name:
                    type: string
                    maxLength: 255
                    description: The unique name of the branch.
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the branch was created.
                    readOnly: true
                updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the branch was last updated.
                    readOnly: true
            required:
                - id
                - name
                - created_at
                - updated_at

paths:
    /auth/login:
        post:
            tags: [Authentication]
            summary: User login
            security: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - identifier
                                - password
                            properties:
                                identifier:
                                    type: string
                                    description: "User's email address, phone number, or employee code"
                                    example: "john.doe@example.com | +1234567890 | E12345"
                                password:
                                    type: string
                                    format: password
                                    example: "securepassword123"
            responses:
                200:
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Login successful"
                                    data:
                                        type: object
                                        properties:
                                            access_token:
                                                type: string
                                                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                            user:
                                                $ref: "#/components/schemas/User"

                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request"
                                    error:
                                        type: string
                                        example: "Email and password are required"
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 401
                                    message:
                                        type: string
                                        example: "Unauthorized"
                                    error:
                                        type: string
                                        example: "Invalid email or password"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to process login request"

    /auth/register:
        post:
            tags: [Authentication]
            summary: User registration
            description: Register a new user account
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - first_name
                                - email
                                - password
                            properties:
                                first_name:
                                    type: string
                                    example: "John"
                                last_name:
                                    type: string
                                    example: "Doe"
                                email:
                                    type: string
                                    format: email
                                    example: "john.doe@example.com"
                                password:
                                    type: string
                                    format: password
                                    example: "securepassword123"
                                agree_terms:
                                    type: boolean
                                    example: true
            responses:
                201:
                    description: User registered successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 201
                                    message:
                                        type: string
                                        example: "User registered successfully"
                                    data:
                                        type: object
                                        properties:
                                            user_id:
                                                type: integer
                                                example: 1
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request"
                                    error:
                                        type: string
                                        example: "Email already in use"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to create user"

    /auth/logout:
        post:
            tags: [Authentication]
            summary: User logout
            description: Log out the currently authenticated user by invalidating the access token.
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Logout successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Successfully logged out"
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 401
                                    message:
                                        type: string
                                        example: "Unauthorized"
                                    error:
                                        type: string
                                        example: "Token is missing or invalid"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to process logout request"

    /auth/google:
        post:
            tags: [Authentication]
            summary: Google Sign-In / Registration
            description: Authenticates a user using a Google ID Token. If the user doesn't exist, attempts registration (requires agreeing to terms if applicable).
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - token
                            properties:
                                token:
                                    type: string
                                    example: "eyJhbGciOiJSUzI1NiIsImtpZCI6Ij..."
                                    description: The Google ID Token received from the client-side Google Sign-In flow.
            responses:
                "200":
                    description: Google login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Google login successful"
                                    data:
                                        type: object
                                        properties:
                                            access_token:
                                                type: string
                                                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                            user:
                                                type: object
                                                properties:
                                                    id:
                                                        type: integer
                                                        example: 1
                                                    email:
                                                        type: string
                                                        example: "john.doe@example.com"
                                                    role:
                                                        type: string
                                                        example: "employee"

                "201":
                    description: Google registration successful (user didn't exist previously)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 201
                                    message:
                                        type: string
                                        example: "Google registration successful"
                                    data:
                                        type: object
                                        properties:
                                            token:
                                                type: string
                                                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                            user:
                                                $ref: "#/components/schemas/User"
                "400":
                    description: Bad Request (e.g., missing token, invalid token format, terms not agreed for registration)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Bad Request"
                "401":
                    description: Unauthorized (e.g., invalid Google token signature/audience/issuer)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 401
                                    message:
                                        type: string
                                        example: "Unauthorized"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal Server Error"

    /auth/password/change:
        post:
            tags: [Authentication]
            summary: Change Password
            description: Allows an authenticated user to change their password.
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - old_password
                                - new_password
                            properties:
                                old_password:
                                    type: string
                                    format: password
                                    example: "oldpassword123"
                                new_password:
                                    type: string
                                    format: password
                                    example: "newpassword123"
            responses:
                "200":
                    description: Password changed successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Password changed successfully"
                "400":
                    description: Bad Request (e.g., missing fields, new password doesn't meet requirements)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Bad Request"
                "401":
                    description: Unauthorized (e.g., invalid/expired JWT, incorrect old password)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 401
                                    message:
                                        type: string
                                        example: "Unauthorized"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                          schema:
                            type: object
                            properties:
                                status:
                                    type: integer
                                    example: 500
                                message:
                                    type: string
                                    example: "Internal Server Error"

    /auth/password/reset:
        post:
            tags: [Authentication]
            summary: Request Password Reset
            description: Initiates the password reset process for a given email address. A reset link/code will typically be sent to the user's email.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: "john.doe@example.com"
            responses:
                "200":
                    description: Password reset initiated (if account exists)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "If an account with that email exists, a password reset link has been sent."

                "400":
                    description: Bad Request (e.g., invalid email format)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Bad Request"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal Server Error"

    /api/employee:
        get:
            tags: [Employees]
            summary: Get all employees
            description: Retrieve a paginated list of employees. Filters can be applied via query parameters.
            parameters:
                - in: query
                  name: page
                  schema:
                      type: integer
                      minimum: 1
                      default: 1
                  description: Page number for pagination.
                - in: query
                  name: page_size
                  schema:
                      type: integer
                      minimum: 1
                      maximum: 100
                      default: 10
                  description: Number of items per page.
            responses:
                '200':
                    description: A list of employees retrieved successfully.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Employees retrieved successfully"
                                    data:
                                        type: object
                                        properties:
                                            items:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: integer
                                                            format: uint
                                                            example: 1
                                                        first_name:
                                                            type: string
                                                            example: "John"
                                                        last_name:
                                                            type: string
                                                            nullable: true
                                                            example: "Doe"
                                                        gender:
                                                            type: string
                                                            nullable: true
                                                            enum: [male, female, other]
                                                            example: "male"
                                                        phone:
                                                            type: string
                                                            nullable: true
                                                            example: "+6281234567890"
                                                        branch_id:
                                                            type: integer
                                                            format: uint
                                                            nullable: true
                                                            example: 1
                                                        position_id:
                                                            type: integer
                                                            format: uint
                                                            example: 1
                                                        grade:
                                                            type: string
                                                            nullable: true
                                                            example: "Staff"
                                                        employment_status:
                                                            type: boolean
                                                            example: true
                                                        employee_code:
                                                            type: string
                                                            nullable: true
                                                            example: "EMP001"
                                            pagination:
                                                type: object
                                                properties:
                                                    total_items:
                                                        type: integer
                                                        format: int64
                                                        example: 100
                                                    total_pages:
                                                        type: integer
                                                        example: 10
                                                    current_page:
                                                        type: integer
                                                        example: 1
                                                    page_size:
                                                        type: integer
                                                        example: 10
                                                    has_next_page:
                                                        type: boolean
                                                        example: true
                                                    has_prev_page:
                                                        type: boolean
                                                        example: false
                '500': # Menggunakan kutip
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to retrieve employees list"
        post:
            tags: [Employees]
            summary: Create new employee
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - user_id
                                - first_name
                                - position_id
                            properties:
                                user_id:
                                    type: integer
                                    format: uint
                                    description: "ID of the existing user to associate with this employee."
                                    example: 1
                                first_name:
                                    type: string
                                    maxLength: 255
                                    example: "John"
                                last_name:
                                    type: string
                                    maxLength: 255
                                    nullable: true
                                    example: "Doe"
                                position_id:
                                    type: integer
                                    format: uint
                                    example: 1
                                employment_status:
                                    type: boolean
                                    nullable: true
                                    description: "Employee's employment status. Defaults to true if not provided."
                                    example: true
                                employee_code:
                                    type: string
                                    maxLength: 50 
                                    nullable: true
                                    pattern: '^[a-zA-Z0-9]*$'
                                    example: "EMP001"
                                branch_id:
                                    type: integer
                                    format: uint
                                    nullable: true
                                    example: 1
                                gender:
                                    type: string
                                    nullable: true
                                    enum: [male, female, other]
                                    example: "male"
                                nik:
                                    type: string
                                    nullable: true
                                    pattern: '^[0-9]*$'
                                    example: "1234567890123456"
            responses:
                '201':
                    description: Employee created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 201
                                    message:
                                        type: string
                                        example: "Employee created successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                format: uint
                                                example: 1
                                            first_name:
                                                type: string
                                                example: "John"
                                            last_name:
                                                type: string
                                                nullable: true
                                                example: "Doe"
                                            gender:
                                                type: string
                                                nullable: true
                                                enum: [male, female, other]
                                                example: "male"
                                            phone:
                                                type: string
                                                nullable: true
                                                example: "+6281234567890"
                                            branch_id:
                                                type: integer
                                                format: uint
                                                nullable: true
                                                example: 1
                                            position_id:
                                                type: integer
                                                format: uint
                                                example: 1
                                            grade:
                                                type: string
                                                nullable: true
                                                example: "Staff"
                                            employment_status:
                                                type: boolean
                                                example: true
                                            employee_code:
                                                type: string
                                                nullable: true
                                                example: "EMP001"
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request data. Please check your input."
                                    error:
                                        type: string
                                        example: "Missing required fields"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "failed to create employee: ..."

    /employees/{id}:
        get:
            tags: [Employees]
            summary: Get employee by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Employee details retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Employee retrieved successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_code:
                                                type: string
                                                example: "EMP001"
                                            first_name:
                                                type: string
                                                example: "John"
                                            last_name:
                                                type: string
                                                example: "Doe"
                                            phone:
                                                type: string
                                                example: "+6281234567890"
                                            department_id:
                                                type: integer
                                                example: 1
                                            position_id:
                                                type: integer
                                                example: 1
                                            employment_status:
                                                type: string
                                                example: "active"
                                            hire_date:
                                                type: string
                                                format: date
                                                example: "2023-01-01"
                404:
                    description: Employee not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Employee not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to retrieve employee"

        patch:
            tags: [Employees]
            summary: Update employee details
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    example: "John"
                                last_name:
                                    type: string
                                    example: "Doe"
                                phone:
                                    type: string
                                    example: "+6281234567890"
                                department_id:
                                    type: integer
                                    example: 1
                                position_id:
                                    type: integer
                                    example: 1
                                employment_status:
                                    type: string
                                    enum: [active, inactive]
                                    example: "active"
                                hire_date:
                                    type: string
                                    format: date
                                    example: "2023-01-01"
            responses:
                200:
                    description: Employee updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Employee updated successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_code:
                                                type: string
                                                example: "EMP001"
                                            first_name:
                                                type: string
                                                example: "John"
                                            last_name:
                                                type: string
                                                example: "Doe"
                                            phone:
                                                type: string
                                                example: "+6281234567890"
                                            department_id:
                                                type: integer
                                                example: 1
                                            position_id:
                                                type: integer
                                                example: 1
                                            employment_status:
                                                type: string
                                                example: "active"
                                            hire_date:
                                                type: string
                                                format: date
                                                example: "2023-01-01"
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request"
                                    error:
                                        type: string
                                        example: "Invalid data provided"
                404:
                    description: Employee not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Employee not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to update employee"

    /employees/{id}/status:
        patch:
            tags: [Employees]
            summary: Update employee employment status
            description: Update employee's employment status to inactive and set resignation date to current date
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Employee status updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Employee status updated successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_code:
                                                type: string
                                                example: "EMP001"
                                            first_name:
                                                type: string
                                                example: "John"
                                            last_name:
                                                type: string
                                                example: "Doe"
                                            employment_status:
                                                type: string
                                                example: "inactive"
                                            resignation_date:
                                                type: string
                                                format: date
                                                example: "2024-03-15"
                404:
                    description: Employee not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Employee not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to update employee status"

    /employee-documents:
        post:
            tags: [Employee Documents]
            summary: Upload a new employee document
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - employee_id
                                - title
                                - document_url
                            properties:
                                employee_id:
                                    type: integer
                                    example: 1
                                title:
                                    type: string
                                    example: "Employment Contract"
                                document_url:
                                    type: string
                                    example: "https://storage.example.com/documents/contract.pdf"
                                status:
                                    type: string
                                    enum: [draft, active]
                                    example: "draft"
            responses:
                201:
                    description: Document uploaded successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 201
                                    message:
                                        type: string
                                        example: "Document uploaded successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_id:
                                                type: integer
                                                example: 1
                                            title:
                                                type: string
                                                example: "Employment Contract"
                                            document_url:
                                                type: string
                                                example: "https://storage.example.com/documents/contract.pdf"
                                            created_at:
                                                type: string
                                                format: date-time
                                                example: "2024-03-15T10:30:00Z"
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request"
                                    error:
                                        type: string
                                        example: "Missing required fields"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to upload document"

        get:
            tags: [Employee Documents]
            summary: Get all employee documents
            parameters:
                - in: query
                  name: employee_id
                  schema:
                      type: integer
            responses:
                200:
                    description: List of employee documents retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Documents retrieved successfully"
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    example: 1
                                                employee_id:
                                                    type: integer
                                                    example: 1
                                                title:
                                                    type: string
                                                    example: "Employment Contract"
                                                document_url:
                                                    type: string
                                                    example: "https://storage.example.com/documents/contract.pdf"
                                                created_at:
                                                    type: string
                                                    format: date-time
                                                    example: "2024-03-15T10:30:00Z"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to retrieve documents"

    /employee-documents/{id}:
        get:
            tags: [Employee Documents]
            summary: Get a specific employee document by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Document details retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Document retrieved successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_id:
                                                type: integer
                                                example: 1
                                            title:
                                                type: string
                                                example: "Employment Contract"
                                            document_url:
                                                type: string
                                                example: "https://storage.example.com/documents/contract.pdf"
                                            created_at:
                                                type: string
                                                format: date-time
                                                example: "2024-03-15T10:30:00Z"
                404:
                    description: Document not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Document not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to retrieve document"

        patch:
            tags: [Employee Documents]
            summary: Update document details
            description: Update document title or URL
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                title:
                                    type: string
                                    example: "Updated Contract"
                                document_url:
                                    type: string
                                    example: "https://storage.example.com/documents/contract_v2.pdf"
            responses:
                200:
                    description: Document updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Document updated successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_id:
                                                type: integer
                                                example: 1
                                            title:
                                                type: string
                                                example: "Updated Contract"
                                            document_url:
                                                type: string
                                                example: "https://storage.example.com/documents/contract_v2.pdf"
                                            created_at:
                                                type: string
                                                format: date-time
                                                example: "2024-03-15T10:30:00Z"
                404:
                    description: Document not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Document not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to update document"

        delete:
            tags: [Employee Documents]
            summary: Delete document
            description: Permanently delete a document
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Document deleted successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Document deleted successfully"
                404:
                    description: Document not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Document not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to delete document"

    /attendance/check-in:
        post:
            tags: [Attendance]
            summary: Employee check-in
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                employee_id:
                                    type: integer
                                    example: 1
                                work_arrangement_id:
                                    type: integer
                                    example: 1
                                ip_address:
                                    type: string
                                notes:
                                    type: string
            responses:
                200:
                    description: Check-in recorded successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/AttendanceLog"
                                    - type: object
                                      properties:
                                          event_type:
                                              type: string
                                              enum: [check_in]
                400:
                    description: Invalid request

    /attendance/check-out:
        post:
            tags: [Attendance]
            summary: Employee check-out
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                employee_id:
                                    type: integer
                                    example: 1
                                work_arrangement_id:
                                    type: integer
                                    example: 1
                                ip_address:
                                    type: string
                                notes:
                                    type: string
            responses:
                200:
                    description: Check-out recorded successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/AttendanceLog"
                                    - type: object
                                      properties:
                                          event_type:
                                              type: string
                                              enum: [check_out]
                400:
                    description: Invalid request

    /attendance/logs:
        get:
            tags: [Attendance]
            summary: Get attendance logs
            parameters:
                - in: query
                  name: start_date
                  schema:
                      type: string
                      format: date
                - in: query
                  name: end_date
                  schema:
                      type: string
                      format: date
                - in: query
                  name: employee_id
                  schema:
                      type: integer
            responses:
                200:
                    description: List of attendance logs
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AttendanceLog"

    /daily-attendance:
        get:
            tags: [Daily Attendance]
            summary: Get daily attendance records
            parameters:
                - in: query
                  name: start_date
                  schema:
                      type: string
                      format: date
                - in: query
                  name: end_date
                  schema:
                      type: string
                      format: date
                - in: query
                  name: employee_id
                  schema:
                      type: integer
            responses:
                200:
                    description: List of daily attendance records
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/DailyAttendance"

    /daily-attendance/{id}:
        get:
            tags: [Daily Attendance]
            summary: Get daily attendance by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Daily attendance record
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DailyAttendance"
                404:
                    description: Attendance record not found

    /overtime:
        post:
            tags: [Overtime]
            summary: Submit overtime request
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/OvertimeRequest"
            responses:
                201:
                    description: Overtime request submitted

        get:
            tags: [Overtime]
            summary: Get overtime requests
            parameters:
                - in: query
                  name: status
                  schema:
                      type: string
                      enum: [pending, approved, rejected]
                - in: query
                  name: employee_id
                  schema:
                      type: integer
            responses:
                200:
                    description: List of overtime requests
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/OvertimeRequest"

    /overtime/{id}/approve:
        post:
            tags: [Overtime]
            summary: Approve/reject overtime request
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                status:
                                    type: string
                                    enum: [approved, rejected]
                                notes:
                                    type: string
            responses:
                200:
                    description: Overtime request updated

    /departments:
        get:
            tags: [Departments]
            summary: Get all departments
            responses:
                200:
                    description: List of all departments
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Department"
        post:
            tags: [Departments]
            summary: Create a new department
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                description:
                                    type: string
                                active:
                                    type: boolean
            responses:
                201:
                    description: Department created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"

    /departments/{id}:
        get:
            tags: [Departments]
            summary: Get department by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Department details
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                404:
                    description: Department not found
        put:
            tags: [Departments]
            summary: Update department by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                description:
                                    type: string
                                active:
                                    type: boolean
            responses:
                200:
                    description: Department updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                404:
                    description: Department not found
        delete:
            tags: [Departments]
            summary: Delete department by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                204:
                    description: Department deleted successfully
                404:
                    description: Department not found

    /positions:
        get:
            tags: [Positions]
            summary: Get all positions
            responses:
                200:
                    description: List of positions
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Position"

        post:
            tags: [Positions]
            summary: Create a new position
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                department_id:
                                    type: integer
            responses:
                201:
                    description: Position created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Position"

    /positions/{id}:
        get:
            tags: [Positions]
            summary: Get a position by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Position details
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Position"
                404:
                    description: Position not found

        put:
            tags: [Positions]
            summary: Update a position by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                department_id:
                                    type: integer
            responses:
                200:
                    description: Position updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Position"
                404:
                    description: Position not found

        delete:
            tags: [Positions]
            summary: Delete a position by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                204:
                    description: Position deleted successfully
                404:
                    description: Position not found

    /work-arrangements:
        get:
            tags: [Work Arrangements]
            summary: Get all work arrangements
            responses:
                200:
                    description: List of work arrangements
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/WorkArrangement"

        post:
            tags: [Work Arrangements]
            summary: Create a new work arrangement
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/WorkArrangement"
            responses:
                201:
                    description: Work arrangement created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WorkArrangement"

    /work-arrangements/{id}:
        get:
            tags: [Work Arrangements]
            summary: Get work arrangement by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Work arrangement details
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WorkArrangement"
                404:
                    description: Work arrangement not found

        put:
            tags: [Work Arrangements]
            summary: Update work arrangement by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/WorkArrangement"
            responses:
                200:
                    description: Work arrangement updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WorkArrangement"
                404:
                    description: Work arrangement not found

        delete:
            tags: [Work Arrangements]
            summary: Delete work arrangement by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                204:
                    description: Work arrangement deleted successfully
                404:
                    description: Work arrangement not found

    /health:
        get:
            summary: Health Check
            description: Returns the health status of the API
            operationId: getHealthStatus
            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: healthy
                                    timestamp:
                                        type: string
                                        format: date-time
                                        example: 2023-03-17T12:00:00Z

    /status:
        get:
            summary: Get API status
            description: Returns the current status of the API
            operationId: getApiStatus
            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    message:
                                        type: string
                                        example: API is running
                                    data:
                                        type: object
                                        properties:
                                            version:
                                                type: string
                                                example: 1.0.0
                                            environment:
                                                type: string
                                                example: production
                                            server_time:
                                                type: string
                                                format: date-time
                                                example: 2023-03-17T12:00:00Z

security:
    - bearerAuth: []
