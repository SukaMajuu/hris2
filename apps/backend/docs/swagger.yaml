openapi: 3.0.0
info:
    title: HRIS API
    description: API documentation for Human Resource Information System
    version: 1.0.0
    contact:
        name: SukaMaju
servers:
    - url: https://hris-backend-sukamaju123.azurewebsites.net/api
      description: Production server
    - url: http://localhost:8080/api/v1
      description: Development server

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        User:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                name:
                    type: string
                    example: "John Doe"
                email:
                    type: string
                    format: email
                    example: "john.doe@example.com"
                role:
                    type: string
                    enum: [admin, hr, employee]
                    example: "employee"
                status:
                    type: string
                    enum: [active, inactive]
                created_at:
                    type: string
                    format: date-time

        Employee:
            type: object
            properties:
                id:
                    type: integer
                user_id:
                    type: integer
                employee_code:
                    type: string
                first_name:
                    type: string
                last_name:
                    type: string
                phone:
                    type: string
                department_id:
                    type: integer
                position_id:
                    type: integer
                employment_status:
                    type: string
                    enum: [active, inactive]
                hire_date:
                    type: string
                    format: date
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        EmployeeDocument:
            type: object
            properties:
                id:
                    type: integer
                employee_id:
                    type: integer
                title:
                    type: string
                document_url:
                    type: string
                status:
                    type: string
                    enum: [draft, active]
                created_by:
                    type: integer
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        AttendanceLog:
            type: object
            properties:
                id:
                    type: integer
                employee_id:
                    type: integer
                event_type:
                    type: string
                    enum: [check_in, check_out]
                timestamp:
                    type: string
                    format: date-time
                work_arrangement_id:
                    type: integer
                ip_address:
                    type: string
                notes:
                    type: string
                created_at:
                    type: string
                    format: date-time

        DailyAttendance:
            type: object
            properties:
                id:
                    type: integer
                employee_id:
                    type: integer
                date:
                    type: string
                    format: date
                status:
                    type: string
                    enum: [present, absent, late]
                first_check_in:
                    type: string
                    format: date-time
                last_check_out:
                    type: string
                    format: date-time
                work_hours:
                    type: number
                    format: float
                notes:
                    type: string
                created_at:
                    type: string
                    format: date-time

        Department:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
                description:
                    type: string
                active:
                    type: boolean
                    default: true
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        Position:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
                department_id:
                    type: integer
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        WorkArrangement:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
                type:
                    type: string
                    enum: [WFA, WFO, WFH]
                is_default:
                    type: boolean
                    default: false
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        OvertimeRequest:
            type: object
            properties:
                id:
                    type: integer
                employee_id:
                    type: integer
                overtime_type_id:
                    type: integer
                date:
                    type: string
                    format: date
                start_time:
                    type: string
                    format: date-time
                end_time:
                    type: string
                    format: date-time
                hours:
                    type: number
                    format: float
                estimated_compensation:
                    type: number
                    format: float
                reason:
                    type: string
                status:
                    type: string
                    enum: [pending, approved, rejected]
                approved_by:
                    type: integer
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        BillingCycle:
            type: object
            properties:
                id:
                    type: integer
                period_name:
                    type: string
                start_date:
                    type: string
                    format: date
                end_date:
                    type: string
                    format: date
                employee_count:
                    type: integer
                amount:
                    type: number
                    format: float
                status:
                    type: string
                    enum: [unpaid, paid]
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        Payment:
            type: object
            properties:
                id:
                    type: integer
                billing_cycle_id:
                    type: integer
                amount:
                    type: number
                    format: float
                payment_method:
                    type: string
                payment_reference:
                    type: string
                payment_date:
                    type: string
                    format: date
                status:
                    type: string
                    enum: [pending, completed]
                created_by:
                    type: integer
                created_at:
                    type: string
                    format: date-time

paths:
    /auth/login:
        post:
            tags: [Authentication]
            summary: User login
            security: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: "john.doe@example.com"
                                password:
                                    type: string
                                    format: password
                                    example: "securepassword123"
            responses:
                200:
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Login successful"
                                    data:
                                        type: object
                                        properties:
                                            token:
                                                type: string
                                                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                            user:
                                                type: object
                                                properties:
                                                    id:
                                                        type: integer
                                                        example: 1
                                                    email:
                                                        type: string
                                                        example: "john.doe@example.com"
                                                    role:
                                                        type: string
                                                        example: "employee"
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request"
                                    error:
                                        type: string
                                        example: "Email and password are required"
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 401
                                    message:
                                        type: string
                                        example: "Unauthorized"
                                    error:
                                        type: string
                                        example: "Invalid email or password"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to process login request"

    /auth/register:
        post:
            tags: [Authentication]
            summary: User registration
            description: Register a new user account
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - name
                                - email
                                - password
                            properties:
                                name:
                                    type: string
                                    example: "John Doe"
                                email:
                                    type: string
                                    format: email
                                    example: "john.doe@example.com"
                                password:
                                    type: string
                                    format: password
                                    example: "securepassword123"
                                role:
                                    type: string
                                    enum: [admin, hr, employee]
                                    example: "employee"
            responses:
                201:
                    description: User registered successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 201
                                    message:
                                        type: string
                                        example: "User registered successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            email:
                                                type: string
                                                example: "john.doe@example.com"
                                            phone:
                                                type: string
                                                example: "+6281234567890"
                                            role:
                                                type: string
                                                example: "employee"
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request"
                                    error:
                                        type: string
                                        example: "Email already in use"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to create user"

    /auth/logout:
        post:
            tags: [Authentication]
            summary: User logout
            description: Log out the currently authenticated user by invalidating the access token.
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Logout successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Successfully logged out"
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 401
                                    message:
                                        type: string
                                        example: "Unauthorized"
                                    error:
                                        type: string
                                        example: "Token is missing or invalid"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to process logout request"

    /employees:
        get:
            tags: [Employees]
            summary: Get all employees
            parameters:
                - in: query
                  name: department_id
                  schema:
                      type: integer
                - in: query
                  name: status
                  schema:
                      type: string
            responses:
                200:
                    description: List of employees retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Employees retrieved successfully"
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    example: 1
                                                user_id:
                                                    type: integer
                                                    example: 1
                                                employee_code:
                                                    type: string
                                                    example: "EMP001"
                                                first_name:
                                                    type: string
                                                    example: "John"
                                                last_name:
                                                    type: string
                                                    example: "Doe"
                                                phone:
                                                    type: string
                                                    example: "+6281234567890"
                                                department_id:
                                                    type: integer
                                                    example: 1
                                                position_id:
                                                    type: integer
                                                    example: 1
                                                employment_status:
                                                    type: string
                                                    enum: [active, inactive]
                                                    example: "active"
                                                hire_date:
                                                    type: string
                                                    format: date
                                                    example: "2023-01-01"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to retrieve employees"

        post:
            tags: [Employees]
            summary: Create new employee
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - first_name
                                - last_name
                                - department_id
                                - position_id
                            properties:
                                first_name:
                                    type: string
                                    example: "John"
                                last_name:
                                    type: string
                                    example: "Doe"
                                phone:
                                    type: string
                                    example: "+6281234567890"
                                department_id:
                                    type: integer
                                    example: 1
                                position_id:
                                    type: integer
                                    example: 1
                                employment_status:
                                    type: string
                                    enum: [active, inactive]
                                    example: "active"
                                hire_date:
                                    type: string
                                    format: date
                                    example: "2023-01-01"
            responses:
                201:
                    description: Employee created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 201
                                    message:
                                        type: string
                                        example: "Employee created successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_code:
                                                type: string
                                                example: "EMP001"
                                            first_name:
                                                type: string
                                                example: "John"
                                            last_name:
                                                type: string
                                                example: "Doe"
                                            phone:
                                                type: string
                                                example: "+6281234567890"
                                            department_id:
                                                type: integer
                                                example: 1
                                            position_id:
                                                type: integer
                                                example: 1
                                            employment_status:
                                                type: string
                                                example: "active"
                                            hire_date:
                                                type: string
                                                format: date
                                                example: "2023-01-01"
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request"
                                    error:
                                        type: string
                                        example: "Missing required fields"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to create employee"

    /employees/{id}:
        get:
            tags: [Employees]
            summary: Get employee by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Employee details retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Employee retrieved successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_code:
                                                type: string
                                                example: "EMP001"
                                            first_name:
                                                type: string
                                                example: "John"
                                            last_name:
                                                type: string
                                                example: "Doe"
                                            phone:
                                                type: string
                                                example: "+6281234567890"
                                            department_id:
                                                type: integer
                                                example: 1
                                            position_id:
                                                type: integer
                                                example: 1
                                            employment_status:
                                                type: string
                                                example: "active"
                                            hire_date:
                                                type: string
                                                format: date
                                                example: "2023-01-01"
                404:
                    description: Employee not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Employee not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to retrieve employee"

        patch:
            tags: [Employees]
            summary: Update employee details
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    example: "John"
                                last_name:
                                    type: string
                                    example: "Doe"
                                phone:
                                    type: string
                                    example: "+6281234567890"
                                department_id:
                                    type: integer
                                    example: 1
                                position_id:
                                    type: integer
                                    example: 1
                                employment_status:
                                    type: string
                                    enum: [active, inactive]
                                    example: "active"
                                hire_date:
                                    type: string
                                    format: date
                                    example: "2023-01-01"
            responses:
                200:
                    description: Employee updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Employee updated successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_code:
                                                type: string
                                                example: "EMP001"
                                            first_name:
                                                type: string
                                                example: "John"
                                            last_name:
                                                type: string
                                                example: "Doe"
                                            phone:
                                                type: string
                                                example: "+6281234567890"
                                            department_id:
                                                type: integer
                                                example: 1
                                            position_id:
                                                type: integer
                                                example: 1
                                            employment_status:
                                                type: string
                                                example: "active"
                                            hire_date:
                                                type: string
                                                format: date
                                                example: "2023-01-01"
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request"
                                    error:
                                        type: string
                                        example: "Invalid data provided"
                404:
                    description: Employee not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Employee not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to update employee"

    /employees/{id}/status:
        patch:
            tags: [Employees]
            summary: Update employee employment status
            description: Update employee's employment status to inactive and set resignation date to current date
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Employee status updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Employee status updated successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_code:
                                                type: string
                                                example: "EMP001"
                                            first_name:
                                                type: string
                                                example: "John"
                                            last_name:
                                                type: string
                                                example: "Doe"
                                            employment_status:
                                                type: string
                                                example: "inactive"
                                            resignation_date:
                                                type: string
                                                format: date
                                                example: "2024-03-15"
                404:
                    description: Employee not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Employee not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to update employee status"

    /employee-documents:
        post:
            tags: [Employee Documents]
            summary: Upload a new employee document
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - employee_id
                                - title
                                - document_url
                            properties:
                                employee_id:
                                    type: integer
                                    example: 1
                                title:
                                    type: string
                                    example: "Employment Contract"
                                document_url:
                                    type: string
                                    example: "https://storage.example.com/documents/contract.pdf"
                                status:
                                    type: string
                                    enum: [draft, active]
                                    example: "draft"
            responses:
                201:
                    description: Document uploaded successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 201
                                    message:
                                        type: string
                                        example: "Document uploaded successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_id:
                                                type: integer
                                                example: 1
                                            title:
                                                type: string
                                                example: "Employment Contract"
                                            document_url:
                                                type: string
                                                example: "https://storage.example.com/documents/contract.pdf"
                                            created_at:
                                                type: string
                                                format: date-time
                                                example: "2024-03-15T10:30:00Z"
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: "Invalid request"
                                    error:
                                        type: string
                                        example: "Missing required fields"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to upload document"

        get:
            tags: [Employee Documents]
            summary: Get all employee documents
            parameters:
                - in: query
                  name: employee_id
                  schema:
                      type: integer
            responses:
                200:
                    description: List of employee documents retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Documents retrieved successfully"
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    example: 1
                                                employee_id:
                                                    type: integer
                                                    example: 1
                                                title:
                                                    type: string
                                                    example: "Employment Contract"
                                                document_url:
                                                    type: string
                                                    example: "https://storage.example.com/documents/contract.pdf"
                                                created_at:
                                                    type: string
                                                    format: date-time
                                                    example: "2024-03-15T10:30:00Z"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to retrieve documents"

    /employee-documents/{id}:
        get:
            tags: [Employee Documents]
            summary: Get a specific employee document by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Document details retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Document retrieved successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_id:
                                                type: integer
                                                example: 1
                                            title:
                                                type: string
                                                example: "Employment Contract"
                                            document_url:
                                                type: string
                                                example: "https://storage.example.com/documents/contract.pdf"
                                            created_at:
                                                type: string
                                                format: date-time
                                                example: "2024-03-15T10:30:00Z"
                404:
                    description: Document not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Document not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to retrieve document"

        patch:
            tags: [Employee Documents]
            summary: Update document details
            description: Update document title or URL
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                title:
                                    type: string
                                    example: "Updated Contract"
                                document_url:
                                    type: string
                                    example: "https://storage.example.com/documents/contract_v2.pdf"
            responses:
                200:
                    description: Document updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Document updated successfully"
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                example: 1
                                            employee_id:
                                                type: integer
                                                example: 1
                                            title:
                                                type: string
                                                example: "Updated Contract"
                                            document_url:
                                                type: string
                                                example: "https://storage.example.com/documents/contract_v2.pdf"
                                            created_at:
                                                type: string
                                                format: date-time
                                                example: "2024-03-15T10:30:00Z"
                404:
                    description: Document not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Document not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to update document"

        delete:
            tags: [Employee Documents]
            summary: Delete document
            description: Permanently delete a document
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Document deleted successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Document deleted successfully"
                404:
                    description: Document not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: "Not found"
                                    error:
                                        type: string
                                        example: "Document not found"
                500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    error:
                                        type: string
                                        example: "Failed to delete document"

    /attendance/check-in:
        post:
            tags: [Attendance]
            summary: Employee check-in
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                employee_id:
                                    type: integer
                                    example: 1
                                work_arrangement_id:
                                    type: integer
                                    example: 1
                                ip_address:
                                    type: string
                                notes:
                                    type: string
            responses:
                200:
                    description: Check-in recorded successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/AttendanceLog"
                                    - type: object
                                      properties:
                                          event_type:
                                              type: string
                                              enum: [check_in]
                400:
                    description: Invalid request

    /attendance/check-out:
        post:
            tags: [Attendance]
            summary: Employee check-out
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                employee_id:
                                    type: integer
                                    example: 1
                                work_arrangement_id:
                                    type: integer
                                    example: 1
                                ip_address:
                                    type: string
                                notes:
                                    type: string
            responses:
                200:
                    description: Check-out recorded successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/AttendanceLog"
                                    - type: object
                                      properties:
                                          event_type:
                                              type: string
                                              enum: [check_out]
                400:
                    description: Invalid request

    /attendance/logs:
        get:
            tags: [Attendance]
            summary: Get attendance logs
            parameters:
                - in: query
                  name: start_date
                  schema:
                      type: string
                      format: date
                - in: query
                  name: end_date
                  schema:
                      type: string
                      format: date
                - in: query
                  name: employee_id
                  schema:
                      type: integer
            responses:
                200:
                    description: List of attendance logs
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AttendanceLog"

    /daily-attendance:
        get:
            tags: [Daily Attendance]
            summary: Get daily attendance records
            parameters:
                - in: query
                  name: start_date
                  schema:
                      type: string
                      format: date
                - in: query
                  name: end_date
                  schema:
                      type: string
                      format: date
                - in: query
                  name: employee_id
                  schema:
                      type: integer
            responses:
                200:
                    description: List of daily attendance records
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/DailyAttendance"

    /daily-attendance/{id}:
        get:
            tags: [Daily Attendance]
            summary: Get daily attendance by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Daily attendance record
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DailyAttendance"
                404:
                    description: Attendance record not found

    /overtime:
        post:
            tags: [Overtime]
            summary: Submit overtime request
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/OvertimeRequest"
            responses:
                201:
                    description: Overtime request submitted

        get:
            tags: [Overtime]
            summary: Get overtime requests
            parameters:
                - in: query
                  name: status
                  schema:
                      type: string
                      enum: [pending, approved, rejected]
                - in: query
                  name: employee_id
                  schema:
                      type: integer
            responses:
                200:
                    description: List of overtime requests
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/OvertimeRequest"

    /overtime/{id}/approve:
        post:
            tags: [Overtime]
            summary: Approve/reject overtime request
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                status:
                                    type: string
                                    enum: [approved, rejected]
                                notes:
                                    type: string
            responses:
                200:
                    description: Overtime request updated

    /departments:
        get:
            tags: [Departments]
            summary: Get all departments
            responses:
                200:
                    description: List of all departments
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Department"
        post:
            tags: [Departments]
            summary: Create a new department
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                description:
                                    type: string
                                active:
                                    type: boolean
            responses:
                201:
                    description: Department created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"

    /departments/{id}:
        get:
            tags: [Departments]
            summary: Get department by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Department details
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                404:
                    description: Department not found
        put:
            tags: [Departments]
            summary: Update department by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                description:
                                    type: string
                                active:
                                    type: boolean
            responses:
                200:
                    description: Department updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                404:
                    description: Department not found
        delete:
            tags: [Departments]
            summary: Delete department by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                204:
                    description: Department deleted successfully
                404:
                    description: Department not found

    /positions:
        get:
            tags: [Positions]
            summary: Get all positions
            responses:
                200:
                    description: List of positions
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Position"

        post:
            tags: [Positions]
            summary: Create a new position
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                department_id:
                                    type: integer
            responses:
                201:
                    description: Position created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Position"

    /positions/{id}:
        get:
            tags: [Positions]
            summary: Get a position by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Position details
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Position"
                404:
                    description: Position not found

        put:
            tags: [Positions]
            summary: Update a position by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                department_id:
                                    type: integer
            responses:
                200:
                    description: Position updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Position"
                404:
                    description: Position not found

        delete:
            tags: [Positions]
            summary: Delete a position by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                204:
                    description: Position deleted successfully
                404:
                    description: Position not found

    /work-arrangements:
        get:
            tags: [Work Arrangements]
            summary: Get all work arrangements
            responses:
                200:
                    description: List of work arrangements
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/WorkArrangement"

        post:
            tags: [Work Arrangements]
            summary: Create a new work arrangement
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/WorkArrangement"
            responses:
                201:
                    description: Work arrangement created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WorkArrangement"

    /work-arrangements/{id}:
        get:
            tags: [Work Arrangements]
            summary: Get work arrangement by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Work arrangement details
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WorkArrangement"
                404:
                    description: Work arrangement not found

        put:
            tags: [Work Arrangements]
            summary: Update work arrangement by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/WorkArrangement"
            responses:
                200:
                    description: Work arrangement updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WorkArrangement"
                404:
                    description: Work arrangement not found

        delete:
            tags: [Work Arrangements]
            summary: Delete work arrangement by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                204:
                    description: Work arrangement deleted successfully
                404:
                    description: Work arrangement not found

    /health:
        get:
            summary: Health Check
            description: Returns the health status of the API
            operationId: getHealthStatus
            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: healthy
                                    timestamp:
                                        type: string
                                        format: date-time
                                        example: 2023-03-17T12:00:00Z

    /status:
        get:
            summary: Get API status
            description: Returns the current status of the API
            operationId: getApiStatus
            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    message:
                                        type: string
                                        example: API is running
                                    data:
                                        type: object
                                        properties:
                                            version:
                                                type: string
                                                example: 1.0.0
                                            environment:
                                                type: string
                                                example: production
                                            server_time:
                                                type: string
                                                format: date-time
                                                example: 2023-03-17T12:00:00Z

security:
    - bearerAuth: []
