name: CI Pipeline

on:
    pull_request:
        branches: ["**"]

permissions:
    actions: read
    contents: read
    pull-requests: write

jobs:
    # frontend-checks:
    #     name: Frontend Lint & Test
    #     runs-on: ubuntu-latest

    #     steps:
    #         - uses: actions/checkout@v3

    #         - name: Set up Node.js
    #           uses: actions/setup-node@v3
    #           with:
    #               node-version: 18
    #               cache: "npm"
    #               cache-dependency-path: "apps/frontend/package-lock.json"

    #         - name: Install dependencies
    #           run: npm install
    #           working-directory: apps/frontend

    #         - name: Lint
    #           run: npm run lint
    #           working-directory: apps/frontend

    # - name: Run tests
    #   run: npm run test
    #   working-directory: apps/frontend

    backend-checks:
        name: Backend Lint & Test
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_PASSWORD: root
                    POSTGRES_USER: root
                    POSTGRES_DB: hris
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: stable

            - name: Install dependencies
              run: go mod download
              working-directory: apps/backend

            - name: Run tests
              run: go test -coverprofile=coverage.out ./...
              working-directory: apps/backend

            - name: Run linter
              uses: golangci/golangci-lint-action@v7
              with:
                  version: v2.0
                  args: --timeout=5m --skip-files='.*_test\.go$'
                  working-directory: apps/backend

            - name: Upload coverage report
              uses: codecov/codecov-action@v3
              with:
                  file: apps/backend/coverage.out
                  fail_ci_if_error: false
