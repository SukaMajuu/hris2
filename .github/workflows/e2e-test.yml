name: E2E Tests

on:
    pull_request:
        branches: ["main", "develop"]

    workflow_dispatch:

jobs:
    e2e-tests:
        name: End-to-End Tests
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Setup Backend
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.2"
                  extensions: mbstring, dom, fileinfo, pgsql, pdo_pgsql

            - name: Install Backend Dependencies
              run: composer install --prefer-dist --no-interaction
              working-directory: apps/backend

            - name: Setup Backend Environment
              run: |
                  cp .env.example .env
                  php artisan key:generate
                  php artisan migrate --force
              working-directory: apps/backend
              env:
                  DB_CONNECTION: pgsql
                  DB_HOST: ${{ secrets.TEST_SUPABASE_DB_HOST }}
                  DB_PORT: ${{ secrets.TEST_SUPABASE_DB_PORT }}
                  DB_DATABASE: ${{ secrets.TEST_SUPABASE_DB_NAME }}
                  DB_USERNAME: ${{ secrets.TEST_SUPABASE_DB_USERNAME }}
                  DB_PASSWORD: ${{ secrets.TEST_SUPABASE_DB_PASSWORD }}

            - name: Start Backend Server
              run: php artisan serve --port=8000 &
              working-directory: apps/backend
              env:
                  DB_CONNECTION: pgsql
                  DB_HOST: ${{ secrets.TEST_SUPABASE_DB_HOST }}
                  DB_PORT: ${{ secrets.TEST_SUPABASE_DB_PORT }}
                  DB_DATABASE: ${{ secrets.TEST_SUPABASE_DB_NAME }}
                  DB_USERNAME: ${{ secrets.TEST_SUPABASE_DB_USERNAME }}
                  DB_PASSWORD: ${{ secrets.TEST_SUPABASE_DB_PASSWORD }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: "npm"
                  cache-dependency-path: "apps/frontend/package-lock.json"

            - name: Install Frontend Dependencies
              run: npm ci
              working-directory: apps/frontend

            - name: Setup Frontend Environment
              run: |
                  echo "NEXT_PUBLIC_API_URL=http://localhost:8000/api" > .env.local
              working-directory: apps/frontend

            - name: Install Playwright Browsers
              run: npx playwright install --with-deps
              working-directory: apps/frontend

            - name: Build Frontend
              run: npm run build
              working-directory: apps/frontend

            - name: Start Frontend
              run: npm start &
              working-directory: apps/frontend

            - name: Wait for servers to start
              run: |
                  echo "Waiting for servers to start..."
                  sleep 10
                  curl --retry 5 --retry-delay 2 --retry-connrefused http://localhost:3000
                  curl --retry 5 --retry-delay 2 --retry-connrefused http://localhost:8000/api/health

            - name: Run E2E Tests
              run: npx playwright test
              working-directory: apps/frontend

            - name: Upload Test Results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report
                  path: apps/frontend/playwright-report/
                  retention-days: 30
